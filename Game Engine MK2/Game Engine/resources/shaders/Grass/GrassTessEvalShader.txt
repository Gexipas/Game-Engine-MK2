#version 430 core

layout (triangles, equal_spacing, cw) in;

in vec3 tcNormal[];
in vec3 tcPosition[];


out VS_OUT {
    vec3 Normal;
	vec3 FragPos;
} vs_out;


uniform mat4 model;

void main(void)
{
	vs_out.FragPos = vec3(model * vec4(
	gl_TessCoord.x * tcPosition[0] +
	gl_TessCoord.y * tcPosition[1] +
	gl_TessCoord.z * tcPosition[2],1 ));

	vs_out.Normal = mat3(transpose(inverse(model))) * (
	gl_TessCoord.x * tcNormal[0] +
	gl_TessCoord.y * tcNormal[1] +
	gl_TessCoord.z * tcNormal[2] );	

}