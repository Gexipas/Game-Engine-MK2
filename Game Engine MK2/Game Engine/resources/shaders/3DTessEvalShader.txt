#version 430 core

layout (triangles, equal_spacing, cw) in;

in vec2 tcTexCoord[];
in vec3 tcNormal[];
in vec3 tcPosition[];

out vec2 TexCoord;
out vec3 Normal;
out vec3 FragPos;
out vec4 FragPosLightSpace;

uniform mat4 model;
uniform mat4 pv;
uniform mat4 lightVPMatrix;

void main(void)
{
	FragPos = vec3(model * vec4(
	gl_TessCoord.x * tcPosition[0] +
	gl_TessCoord.y * tcPosition[1] +
	gl_TessCoord.z * tcPosition[2],1 ));

	FragPosLightSpace = lightVPMatrix * vec4(FragPos, 1.0f);

	Normal = mat3(transpose(inverse(model))) * (
	gl_TessCoord.x * tcNormal[0] +
	gl_TessCoord.y * tcNormal[1] +
	gl_TessCoord.z * tcNormal[2] );	

    gl_Position = pv * vec4(FragPos, 1.0);

	TexCoord =  (
	gl_TessCoord.x * tcTexCoord[0] +
	gl_TessCoord.y * tcTexCoord[1] +
	gl_TessCoord.z * tcTexCoord[2] );
}