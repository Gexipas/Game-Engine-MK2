#version 330 core
layout (triangles) in;
layout (triangle_strip, max_vertices = 21) out;

in VS_OUT {
    vec3 Normal;
    vec3 FragPos;
} gs_in[];

uniform mat4 pv;

out vec3 fColor;

const float SCALE = 0.4;

void GenerateLine(int index)
{
    vec3 change = vec3(0.1,0.1,0);
    fColor = vec3(0.1, 0.2, 0.0);
    vec4 position = pv*vec4(gs_in[index].FragPos,1);
    gl_Position = position + pv*vec4(-0.1, 0, 0.0, 0.0)*SCALE;  
    EmitVertex();   
    gl_Position = position + pv*vec4( 0.1, 0, 0.0, 0.0)*SCALE; 
    fColor += change;
    EmitVertex();
    gl_Position = position + pv*vec4(0,  0.2, 0.0, 0.0)*SCALE;  
    fColor += change;
    EmitVertex();
    gl_Position = position + pv*vec4( 0.2,  0.2, 0.0, 0.0)*SCALE; 
    fColor += change;
    EmitVertex();
    gl_Position = position + pv*vec4( 0.2,  0.4, 0.0, 0.0)*SCALE;  
    fColor += change;
    EmitVertex();
    gl_Position = position + pv*vec4( 0.4,  0.4, 0.0, 0.0)*SCALE; 
    fColor += change;
    EmitVertex();
    gl_Position = position + pv*vec4( 0.6,  0.6, 0.0, 0.0)*SCALE;  
    fColor += change;
    EmitVertex();
    EndPrimitive();
}
void main()
{
    GenerateLine(0); // first vertex normal
    GenerateLine(1); // second vertex normal
    GenerateLine(2); // third vertex normal
}